name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
    MONGO_PASSWORD: ${{secrets.MONGO_PASSWORD}}
    
jobs:
    unit-testing:
        name: Unit Testing
        strategy:
            matrix:
                nodejs_version: [18, 19, 20]
                operating_system: [ubuntu-latest, linux]
                exclude: 
                    - nodejs_version: 18
                      operating_system: linux
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository  
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: 20
        
        - name: Cache NPM dependencies
          uses: actions/cache@v3
          with:
            path: node_modules
            key: ${{ runner.OS }}-npm-cache-${{ hashFiles('package-lock.json') }}
    
        - name: Install all Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          uses: actions/upload-artifact@v3
          with:
            name: Mocha-Test-Result
            path: test-results.xml
    
    code-coverage:
        name: Code Coverage
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Setup NodeJS Version
              uses: actions/setup-node@v3
              with:
                node-version: 18
            
            - name: Cache NPM dependencies 
              uses: actions/cache@v3
              with:
                path: node_modules
                key: ${{ runner.OS }}-npm-cache-${{ hashFiles('package-lock.json') }}
            
            - name: Install all Dependencies
              run: npm install
            
            - name: Unit Testing
              run: npm test
            
            - name: Check Code Coverage
              continue-on-error: true
              id: nodejs_unit_test_step
              run: npm run coverage
            
              
            - name: Archive Test Result
              if: always()
            
              uses: actions/upload-artifact@v3
              with:
                name: Code-Coverage-Result
                path: coverage
                retention-days: 5

    docker:
        name: Containarization
        needs: [code-coverage, unit-testing]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository  
              uses: actions/checkout@v4
        
            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                registry: docker.na1.hsdp.io
                username: ${{ vars.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_PASSWORD }}

    
            
            
            
            
